name: Compatibility database update

on:
  push:

jobs:
  update_compat_db:
    permissions: write-all
    runs-on: windows-latest

    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: '>=1.17.0'
    #- uses: actions/cache@v3
    #  with:
    #    path: |
    #      ~\AppData\Local\go-build
    #      ~\go\pkg\mod
    #    key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
    #    restore-keys: |
    #      ${{ runner.os }}-go-
    - name: Create XML file and get compatibility database
      run: |
        $headers = @{
            Authorization = "Token ${{ secrets.GITHUB_TOKEN }}"
        }
        $compat_link = "https://api.github.com/repos/Vita3K/compatibility"
        $issues_link = $compat_link + "/issues"
        $date = (Invoke-RestMethod -Uri $issues_link"?sort=updated" -Headers $headers)[0].updated_at
        $open_issues_count = (Invoke-RestMethod -Uri "$compat_link" -Headers $headers).open_issues_count
        $page_count = @()
        for ($i = 0; $i -lt $open_issues_count; $i += 100) {
            $page = [Math]::Floor($i / 100) + 1
            $per_page = [Math]::Min($open_issues_count - $i, 100)
            $page_count += New-Object PSObject -Property @{First=$page; Second=$per_page}
        }
        $xml = New-Object System.Xml.XmlDocument
        $xml.AppendChild($xml.CreateXmlDeclaration("1.0", "UTF-8", $null)) | Out-Null
        $xml.AppendChild($xml.CreateComment("This file is automatically generated by a GitHub action. Do not edit it manually.")) | Out-Null
        $root = $xml.CreateElement("compatiblity")
        $root.SetAttribute("date", $date)
        $root.SetAttribute("version", "1")
        $xml.AppendChild($root) | Out-Null
        $issue_count = 0
        foreach ($page in $page_count) {
            $current_page = $page.First
            $per_page = $page.Second
            $issues = (Invoke-RestMethod -Uri $issues_link"?state=open&page=$current_page&per_page=100" -Headers $headers)[0..$per_page]
            foreach ($issue in $issues) {
                $issueNode = $xml.CreateElement("app")
                $issueNode.SetAttribute("title_id", $issue.title.TrimEnd().substring($issue.title.TrimEnd().length-10,9))
                $numberNode = $xml.CreateElement("issue_id")
                $numberNode.InnerText = $issue.number
                $issueNode.AppendChild($numberNode) | Out-Null
            
                $labelsNode = $xml.CreateElement("labels")
                foreach ($label in $issue.labels) {
                    $labelNode = $xml.CreateElement("label")
                    $labelNode.InnerText = $label.id
                    $labelsNode.AppendChild($labelNode) | Out-Null
                }
                $issueNode.AppendChild($labelsNode) | Out-Null
            
                $root.AppendChild($issueNode) | Out-Null
                $issue_count++
            }
        }
        $xml.Save("app_compat_db.xml")  
        "$issue_count issues have been retrieved from the compatibility database"
        
        $upload_url = (Invoke-Restmethod -Uri https://api.github.com/repos/Vita3K/compatibility/releases/latest -Headers $headers).upload_url
        "upload_url is $upload_url"
        Add-Content -Path $env:GITHUB_ENV -Value "upload_url=$upload_url"

    - name: Debug env variable
      run: |
           "upload_url ${{ env.upload_url }}"
        
    - name: Publish Release
      run: |
        go install github.com/tcnksm/ghr@latest
        ghr -u qurious-pixel -r vita3k-compatibility -delete -n "compat db" -t "${{ secrets.GITHUB_TOKEN }}" -b "test 4 delete" compat_db app_compat_db.xml
